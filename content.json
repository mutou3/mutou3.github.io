{"meta":{"title":"爱自由","subtitle":null,"description":null,"author":"The Answer","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2018-09-21T15:23:48.000Z","updated":"2018-09-21T15:28:47.342Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-21T16:31:20.000Z","updated":"2018-09-21T16:32:41.311Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vim编辑器","slug":"vim编辑器","date":"2019-02-19T15:34:29.000Z","updated":"2019-02-16T16:02:56.874Z","comments":true,"path":"2019/02/19/vim编辑器/","link":"","permalink":"http://yoursite.com/2019/02/19/vim编辑器/","excerpt":"","text":"vim +文件名 直接打开文件，进入到命令模式（老段视频第10章）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"vim编辑器","slug":"vim编辑器","permalink":"http://yoursite.com/tags/vim编辑器/"}]},{"title":"磁盘和文件系统","slug":"磁盘和文件系统的管理","date":"2019-02-18T15:34:29.000Z","updated":"2019-02-16T16:02:48.324Z","comments":true,"path":"2019/02/18/磁盘和文件系统的管理/","link":"","permalink":"http://yoursite.com/2019/02/18/磁盘和文件系统的管理/","excerpt":"","text":"linux支持文件系统查看磁盘大小：df -h 以易读的方式显示磁盘使用情况du -sh -s选项表示只单独查看该文件的大小，若不跟选项-s会把文件夹下的所有的文件大小都显示出来。 连接文件软连接相当于window中的快捷方式；创建软连接的方式命令：ln -s 文件名 软链接文件名 表示创建了aal为aa的软连接（快捷方式）硬链接：同一个文件有几个名字，创建硬链接的命令为：ln 文件名 硬链接文件名对磁盘分区：命令fdisk,命令：fdisk -l 直接显示所有的硬盘和分区创建分区：fdisk /dev/sda 对硬盘进行分区。所以后面跟硬盘名主分区最多只有4个，重新创建分区标后，需要更新分区表命令：partprobe划好分区后，分区不能直接使用，需要格式化新建的分区，命令：mkfs -t ext3 /dev/sda5 或者 mkfs.ext3 /dev/sda5…若要指定block size的大小，需要指定 mkfs.ext3 -b 4096 /dev/sda5.。。默认的block size为1024k格式化好后若要使用还必须要挂载：mount /磁盘检验 fsck 对整个分区进行检查 fsck /dev/sda5检测系统坏道：badblocks /dev/sda5挂载分区：必须要把分区挂载到某个目录下命令：mount 外部设备 目录mount /dev/sda5 /mntumount 外部设备 或者 umount 挂载点mount -o remount,ro /mnt 以只读的形式重新挂载/mntmount -o remount,rw /mnt 以只读和写的形式重新挂载/mntmount -o remount,noexcu /mnt 以没有可以执行权限重新挂载/mnt若卸载的是后提示，设备正在使用，可以使用命令fuser -mv /mnt查看到底是那个进程正在使用该设备以上使用mount挂载的是临时挂载，关机后就没在挂载了挂载镜像 mount -o loop XX.iso /mnt 挂载镜像使用参数loop设置开机挂载配置文件为：/etc/fstab 文件最左边为设备名 中间为挂载点 然后为文件系统 默认权限 第一个数字（是否做备份） 第二个数字（开机时是否进行fsck进行检查）查看磁盘参数 tune2fs -l /dev/sda5 创建交换分区 查看交换分区 cat /proc/swaps diff +文件 +文件 对比两个文件的区别 文件与文件系统的压缩与打包压缩命令：gzip + 文件名 （源文件也不存在了） zcat + 压缩文件的名字 （不解压的情况下，也可以查看压缩文件的内容）gzip -c hosts &gt; hosts.gz 保留源文件bzip2 hosts 源文件也不存在了 bzip2 -c &gt; hosts.bz2 保留源文件 bzcat + 压缩文件名 也可以查看内容zip hosts.zip hosts 解压直接运行：unzip hosts.zip 打包：tar tar -tvf +打包文件名 （不解压的时，查看打包文件的内容）指定解压的路径：tar -xvf hosts.tar -C aa/ 指定解压到aa目录下指定解压的某个文件： tar -xvf xx.tar 文件名 （指定解压这一个文件名出来）tar -czvf xxx.tar.gz xxx –remove-files (移除源文件进行打包压缩) gz后缀压缩tar -jcvf xxx.tar.bz2 xxx –remove-files （移除源文件进行打包压缩） bz2后缀压缩tar -jxvf xxx.tar.bz2 解压后缀为bz2的压缩文件tar -jxvf xxx.tar.gz2 -C aa/ （指定解压文件到哪个目录下） 备份备份分为3种，全备份，增量备份，差异备份dump -数字（数字代表备份级别，只会从上次备份级别比他小的备份开始备份）增量备份，级别是依次增大，差异备份，级别依次减小 dump -0u -f rhce/1.dump /dev/sda3 （该命令表示对分区sda3进行全备份，并将备份文件存储在当前路径的rhce/下面，u表示将备份的日志写到/etc/dumpdatas下） 恢复备份restore -t -f 备份.dump 文件 （-t表示不恢复的时候查看备份文件的内容）restore -r -f /root/rhce/1.dump (-f指定恢复的文件)（-r 把所有的备份文件全部恢复出来）restore -i -f /root/rhce/1.dump (该命令会有一个交互，可以选定具体恢复哪些文件) 新建镜像：mkisofs -o xx.iso 文件名 文件名 （创建镜像）挂载镜像：mount -o loop xx.iso /mnt (挂载镜像)cp /dev/cdrom/ xxx.iso (直接把光盘拷贝为镜像) （然后挂载就可以使用）dd if=/dev/zero of=file4 bs=1M count=1dd if=/dev/sda of=/dev/sdbdd if=/dev/sda3 of=test (把sda3的数据全部整合到test里面)dd if=test of=/dev/sda3 (把test的数据恢复到sda3中去)dd if=/dev/sda1 of=/dev/sda2 (把sda1的数据拷贝到sda2分区里面去) find -name ‘file*’ |cpio -o &gt; xx.cpio（把文件名包含有file的文件打包到 xx.cpio）cpio -iu &lt;xx.cpio (把xx.cpio解包)","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"磁盘和文件系统","slug":"磁盘和文件系统","permalink":"http://yoursite.com/tags/磁盘和文件系统/"}]},{"title":"文件权限与目录配置","slug":"linux的文件权限与目录配置","date":"2019-02-17T15:34:29.000Z","updated":"2019-02-16T16:02:42.702Z","comments":true,"path":"2019/02/17/linux的文件权限与目录配置/","link":"","permalink":"http://yoursite.com/2019/02/17/linux的文件权限与目录配置/","excerpt":"","text":"文件权限与目录配置用户的信息保存在/etc/passwd文件中用户的密码存放在/etc/shadow用户组的信息存放在/etc/grouplinux中系统是根据 uid来识别用户的，每一个用户对应一个uid 环境变量 ls -l 以长模式的形式查看目录下的文件。 第一列为权限第二列为文件的硬链接数第三列 为文件的所有者第四列 为文件的所属组文件以：- 普通文件 d: 目录 b：设备文件（块设备：可以用来存储东西的文件，U盘，硬盘，光驱） c： 设备文件（字符型文件，鼠标、键盘、等硬件）l: 指快捷方式（软连接） 使用chmod 改权限 chmod u+x,g+w,o+r 文件名chmod u=rw 文件名 前置将user的权限改为rw 文件夹必须要有 X 权限才能cd 进去查看文件属性使用命令 file + 文件名 ## 切换目录 cd - 切换到上一次的目录linux中拷贝快捷方式，是直接拷贝源文件为目的文件 若只拷贝快捷方式则需要加上 -dlinux中拷贝文件:若要拷贝文件的属性，这需要在命令后面加上 选项 -p ##文件查看cat -n 文件名，，查看文件时第一列显示 行数more 从上往下显示，按回车一行一行的往下显示，按空格一屏幕的往下，，more 分屏显示less less支持往前和往后看。按pageup和pagedown，其他的和more相同，在less里面支持查找，按命令/，按n从上往下依次查找，N从下往上查找。head 查看文件的头几行，默认前10行，若其他的行，这使用命令head -5 文件，查看文件的前5行tail 查看文件的尾5行， 若查看其他行，则使用命令 tail -6 文件，查看文件尾5行。 tail -f 文件名 实时查看文件写入情况以上命令只能查看文本文件若要查看二进制文件，则使用命令：od -t c 文件名查看非纯文本文件使用命令：strings 文件名 创建一个文件：touch 文件名 如果某个文件已经存在的情况下，就是将已经存在的文件的时间改为创建的当前时间 umask 权限过滤符，值代表被过滤的权限。文件默认的权限为666 文件夹默认的权限为 777 。 然后过滤掉umask值存在的权限 chattr lsattr查看隐藏权限 chattr +a 文件夹 表示该文件夹下面只能添加文件不能删除 chattr +i 文件夹 表示该文件夹下面文件不能添加也不能删除 特殊权限：SUID ，若一个命令的所有者权限时候有S的时候，其他用户自行该命令时，也具有所有者的权限。SGID： #命令与文件的查询查看命令在哪个路径：which +命令 或者 where is + 命令locate +文件名 根据/var/lib/mlocate/mlocate.db数据库里面的内容进行查找，每一天更新一次，若要手动更新的换，执行命令 updatedb，locate +i +文件名 不区分大小写 find 目录 -属性 值 （未指定目录的话，就在当前路径下查找）属性name size perm（权限）等属性","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"权限与目录","slug":"权限与目录","permalink":"http://yoursite.com/tags/权限与目录/"}]},{"title":"linux学习","slug":"linux基础","date":"2019-02-16T15:34:29.000Z","updated":"2019-02-16T16:02:39.070Z","comments":true,"path":"2019/02/16/linux基础/","link":"","permalink":"http://yoursite.com/2019/02/16/linux基础/","excerpt":"","text":"基础部分分区hd 硬盘 hda hdb hdc 表示abc 三个硬盘sata 硬盘 sd sda sdb sdc 表示abc 三个硬盘hda1 hda2 hda3 表示第一个硬盘的1、2、3分区sda1 sda2 sda3 表示第一个硬盘的1、2、3分区 挂载点：windows 分区，必须给每一个分区分配一个盘符；才能够看到及使用该分区。 在linux下自由/可以当盘符，所以其他的分区，都得在/下创建文件。挂载点就是/下面创建的路径。 网卡linux网卡，使用eth来表示，windows下使用本地连接来表示。 一台电脑装多个操作系统的话，系统不能安装到同一个分区下。window系统只能装在主分区里面。 在linux里面以点号开头的，都是隐藏文件。 图形化界面与命令行切换图形化界面同命令行的切换，linux一般有七个控制台，1到6个都是字符界面，第7个是图形化界面。ctl + alt + f1~f6，切换控制台。 ctl + alt + f7 ，图形化界面。 控制台又称之为入口，通过这七个控制台都可以登入到系统。 使用命令tty 可以查看当前所在第几个控制台。 命令的执行linux中命令的格式。 命令 -选项… 参数 （选项表示如何执行该命令）（-后面跟的是选项） ls -h (-h 选项以能看懂的方式显示大小)（当选项是一个单词整体的时候，前面需要两条 杠 –）在命令行执行命令时候的声音执行命令 modprobe -r pcspkr，root用户下。 快捷键：ctl +a 光标跳到本行的开头。 ctl +e 光标跳到本行末尾。再按住左右建，一个单词一个单词的跳 ctl +u 光标位置删除到本行的开头 ctl +k 当前光标一直删除到本行的结尾。执行命令：touch xx 后再执行命令 ^xx ^yy，表示重新执行前一个命令，并将xx替换成yy执行一遍 相当于执行了一遍：touch yy。ctl +shift +t 打开新的终端，ctl +shift +pageup或者+pagedown切换终端。 命令whatis +命令 该命令用来解释该命令有什么作用，显示不同的章节–help 告诉具体的用法。若选项或文件用[]括起来的话，表示该选项或者文件可以省略。 …表示可以有多个选项或者文件 小写的n从上往下查找，大写的N表示从下往上查找。 /^des该命令表示查找开头为des的单词，尖括号表示开头。 若某个命令只能记住一部分，可以使用 命令：man -k能记住的部分，此后将会显示全部包含该部分的命令。man 还可以查询配置文件的使用方法。帮助文档存放在/usr/shoare/doc里面。 man +命令 查看命令使用方法，默认的是显示第一章。。若要查询别的章节使用：man 章节 +命令 文本编辑：gedit 图形化编辑。 运行级别运行级别 不同的运行级别里面，运行的服务不一样。linux中 /etc/init.d 或者 rc.d/inid.d 然后运行的级别就是在rc.d里面的7个不同的级别。不同的级别就运行对应的rc5.d,里面的服务，，服务以K开头的表示该服务停止运行。 查看运行级别的命令：runlevel图形化界面在级别5.级别1单用户模式。级别3 存文本模式，在存文本级别下可以手动打开图形界面，执行命令：startx，虽然启动了图形化界面，但是运行级别未改变。级别6 重启 每个级别进入系统都有7个控制台。 忘记root密码","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"初学者","slug":"初学者","permalink":"http://yoursite.com/tags/初学者/"}]},{"title":"MySql基础","slug":"MySql","date":"2018-09-21T15:34:29.000Z","updated":"2018-09-21T16:35:06.781Z","comments":true,"path":"2018/09/21/MySql/","link":"","permalink":"http://yoursite.com/2018/09/21/MySql/","excerpt":"","text":"数据库基本概念数据库是：一个以某种有组织的方式存储的数据集合。数据库（database）保存有组织的数据容器（通常是一个文件或是一组文件）。数据库软件应称为DBMS（数据库管理系统）。数据库是通过DBMS创建和操作的容器。（用户并不直接访问数据库，而是通过DBMS，他替你访问数据库） 组成1. 表（table）表是一种结构化的文件，可以用来存储某种特定类型的数据，某种特定类型数据的结构化清单。表名的唯一性取决于多个因素，如数据库名和表名等的结合。相同的数据库中不能两次使用相同的表名，但是在不同的数据库中却可以使用相同的表名。 2. 模式（schema）描述表的这组信息就是所谓的模式,模式可以用来描述数据库中的特定的表以及整个数据库。关于数据库和表的布局及特性的信息。 3. 列（column）和数据类型列： 表中的一个字段。所有的表都是由一个或者多个列组成的。数据类型： 说容许的数据类型。每个表都有相应的数据类型，它限制（或容许）该列中存储的数据。数据类型限制可存储在列中的数据类型。在创建表时必须对数据类型给予特别的关注。 4. 行（row）表中的数据是按照行储存的，所保存的每个记录存储在自己的行内。 表中的行数为记录的总数。你可能在听到用户在提到行（row）时称其为数据库的记录（record）。 5. 主键（primary key）表中的每一行都应该有可以唯一标识自己的一列（或一组）。其值能够唯一区分表中每个行。唯一标识表中每行的这个列（或这组列）称为主键。表中的任何列都可以作为主键，他只要满足一下条件 (1.)任意两行都不具有相同的主键值 (2.)每个行都必须具有一个主键值（主键列不允许NULL值）。 什么是SQL1.sqlsql是一种专门用来与数据库通信的语言","categories":[{"name":"MySql","slug":"MySql","permalink":"http://yoursite.com/categories/MySql/"}],"tags":[{"name":"初学者","slug":"初学者","permalink":"http://yoursite.com/tags/初学者/"}]},{"title":"测试","slug":"测试","date":"2018-09-16T14:51:56.000Z","updated":"2018-09-16T16:05:57.185Z","comments":true,"path":"2018/09/16/测试/","link":"","permalink":"http://yoursite.com/2018/09/16/测试/","excerpt":"你就可以看到你的博客了，今天学习了hexo+github搭建个人免费博客。刚开始是完全不知道怎么弄，就是这一点点的在网上查资料，然后慢慢摸索，直到现在大概用了6/7个小时左右几乎，就搭建好了自己的博客，基本的用法基本上已经能够使用呢，就是还有些细节问题还需要进一步的，学习。还需要进一步的完善改进自己的博客的样式，能让他达到完美的状态。","text":"你就可以看到你的博客了，今天学习了hexo+github搭建个人免费博客。刚开始是完全不知道怎么弄，就是这一点点的在网上查资料，然后慢慢摸索，直到现在大概用了6/7个小时左右几乎，就搭建好了自己的博客，基本的用法基本上已经能够使用呢，就是还有些细节问题还需要进一步的，学习。还需要进一步的完善改进自己的博客的样式，能让他达到完美的状态。 基本要求基本能力1世间只有公道，付出总有回报。其实付出不一定有回报，但是可以确定的是，没有付出是绝对没有回报的 是不是就是这个样子呢 决心表态more info: qzone 继续学习weizhsdfsdfwe ewrferfer 努力努力永不放弃撒大声地萨达所大所奥术大师多啥多日热污染啥多 这一次不知道能是的份上废物 书得我些的清单群无都是我的无就是是这样的所以所以每一次都需要进一步的学习 整理资料努力努力整理资料的重要性可以直接执行复制的工作的就是这样的额简单明年加油加油加油","categories":[],"tags":[{"name":"文本格式魔板测试","slug":"文本格式魔板测试","permalink":"http://yoursite.com/tags/文本格式魔板测试/"}]},{"title":"my-first_blog","slug":"my-first-blog","date":"2018-09-16T11:26:07.000Z","updated":"2018-09-16T11:33:13.709Z","comments":true,"path":"2018/09/16/my-first-blog/","link":"","permalink":"http://yoursite.com/2018/09/16/my-first-blog/","excerpt":"","text":"今天学习了怎样使用hexo+github免费搭建博客并自己搭建了博客，虽然还不是很熟悉，但是需要慢慢的来学习其中更多的知识，让这个成为一个很好的开端，以后做自己想做的事情，不落后别的同学；","categories":[],"tags":[{"name":"学习、学习、努力","slug":"学习、学习、努力","permalink":"http://yoursite.com/tags/学习、学习、努力/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-09-15T14:30:42.123Z","updated":"2018-09-16T11:53:08.459Z","comments":true,"path":"2018/09/15/hello-world/","link":"","permalink":"http://yoursite.com/2018/09/15/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}